@model AccountSecurityViewModel;


@{
    ViewData["Title"] = Model.Title;
}
<section id="security">
    <div class="container">
        <div class="account-nav">
            <div class="nav-image">
                <img src="~/images/avatarBig.svg" alt="User Image" />
            </div>
            <div class="nav-name-info">
                <h2 class="h5 gray-900">@Model.AccountBasic.FirstName @Model.AccountBasic.LastName</h2>
                <p class="gray-700">@Model.AccountBasic.Email</p>
            </div>
            <div class="nav-buttons">
                <a asp-controller="Account" asp-action="Index" class="btn-gray"><i class="fa-regular fa-gear"></i>Account Details</a>
                <a asp-controller="Account" asp-action="Security" class="btn-theme"><i class="fa-regular fa-lock"></i>Security</a>
                <a asp-controller="Account" asp-action="SavedItems" class="btn-gray"><i class="fa-light fa-bookmark"></i>Saved Courses</a>
                <a asp-controller="Home" asp-action="Index" class="btn-gray"><i class="fa-light fa-right-from-bracket"></i>Sign Out</a>
            </div>
        </div>

        <div class="account-security">
            <h1 class="h2">@Model.Title</h1>
            <form class="security" method="post" asp-controller="Account" asp-action="Security" novalidate>
                <h3 class="h5">@Model.AccountSecurity.Title</h3>
                @if (!string.IsNullOrEmpty(TempData["PasswordError"]?.ToString()))
                {
                    <div class="alert">
                        @TempData["PasswordError"]
                    </div>
                }
                @if (!string.IsNullOrEmpty(TempData["PasswordSuccess"]?.ToString()))
                {
                    <div class="success">
                        @TempData["PasswordSuccess"]
                    </div>
                }
                
                <div class="security-content">                 
                    <div id="current-password" class="security-group">
                        <label asp-for=AccountSecurity.CurrentPassword></label>
                        <span asp-validation-for="AccountSecurity.CurrentPassword"></span>
                        <input asp-for="AccountSecurity.CurrentPassword" />
                    </div>
                    <div id="new-password" class="security-group">
                        <label asp-for=AccountSecurity.NewPassword></label>
                        <span asp-validation-for="AccountSecurity.NewPassword"></span>
                        <input asp-for="AccountSecurity.NewPassword" />
                    </div>
                    <div id="confirm-password" class="security-group">
                        <label asp-for="AccountSecurity.ConfirmNewPassword"></label>
                        <span asp-validation-for="AccountSecurity.ConfirmNewPassword"></span>
                        <input asp-for="AccountSecurity.ConfirmNewPassword" />
                    </div>

                </div>
                <div class="security-buttons">
                    <button class="btn-gray" type="reset">Cancel</button>
                    <button class="btn-theme" type="submit">Change Password</button>
                </div>
            </form>

            <div class="account-delete">
                <form class="delete" method="post" asp-controller="Account" asp-action="DeleteUser">
                    <h4 class="h5">@Model.AccountDelete.Title</h4>
                    <p class="gray-700">@Model.AccountDelete.Description</p>
                    <div id="delete-box" class="deletebox-group">
                        <input asp-for=AccountDelete.DeleteAccount />
                        <label asp-for="AccountDelete.DeleteAccount">@Model.AccountDelete.ConfirmDelete</label>
                        <span class="checkbox-error" asp-validation-for="AccountDelete.DeleteAccount"></span>
                        <span asp-for="AccountDelete.ConfirmDelete"></span>
                    </div>
                    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
                    {
                        <div class="alert">
                            @TempData["ErrorMessage"]
                        </div>
                    }
                    <div class="delete-button">
                        <button class="btn-theme" type="submit">Delete</button>
                    </div>
                   
                </form>
            </div>

        </div>


    </div>

</section>

@await Html.PartialAsync("~/Views/Shared/_validationScriptPartial.cshtml")